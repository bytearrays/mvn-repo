<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>

<groupId>org.trello4j</groupId>
<artifactId>trello4j</artifactId>
<version>1.0-SNAPSHOT</version>
<packaging>jar</packaging>

<name>trello4j</name>
<url>https://github.com/joelso/trello4j</url>
<description>Java wrapper around Trello API</description>

<licenses>
    <license>
        <name>Apache License 2.0</name>
        <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        <distribution>repo</distribution>
    </license>
</licenses>

<scm>
    <url>https://github.com/joelso/trello4j</url>
    <connection>scm:git:git://github.com/joelso/trello4j.git</connection>
    <developerConnection>scm:git:git://github.com/joelso/trello4j.git</developerConnection>
</scm>

<developers>
    <developer>
        <id>joelso</id>
        <name>Joel</name>
        <email>joel@frostdigital.se</email>
        <url>http://frostdigital.se/</url>
        <roles>
            <role>lead</role>
            <role>architect</role>
            <role>developer</role>
        </roles>
    </developer>
</developers>

<properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <github.global.server>github</github.global.server>
</properties>
<build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.1</version>
            <configuration>
                <source>1.6</source>
                <target>1.6</target>
            </configuration>
        </plugin>
        <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.1</version>
            <configuration>
                <altSnapshotDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo/snapshots</altSnapshotDeploymentRepository>
                <altReleaseDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo/releases</altReleaseDeploymentRepository>
            </configuration>
        </plugin>
        <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.10</version>
            <configuration>
                <message>Maven artifacts for ${project.version}</message>
                <!-- git commit message -->
                <noJekyll>false</noJekyll>
                <!-- disable webpage processing -->
                <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                <!-- matches distribution management repository url above -->
                <includes>
                    <include>**/*</include>
                </includes>
                <repositoryName>mvn-repo</repositoryName>
                <!-- github repo name -->
                <repositoryOwner>bytearrays</repositoryOwner>
                <!-- github username  -->
                <branch>refs/heads/master</branch>
            </configuration>
            <executions>
                <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                <execution>
                    <goals>
                        <goal>site</goal>
                    </goals>
                    <phase>deploy</phase>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>
<dependencies>
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.1</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.1</version>
        <scope>test</scope>
    </dependency>
</dependencies>

<distributionManagement>
    <snapshotRepository>
        <id>internal.repo.snapshots</id>
        <name>Temporary Staging Repository</name>
        <url>file://${project.build.directory}/mvn-repo/snapshots</url>
    </snapshotRepository>
   <repository>
        <id>internal.repo.releaess</id>
        <name>Temporary Staging Repository</name>
        <url>file://${project.build.directory}/mvn-repo/releases</url>
   </repository>
</distributionManagement>

</project>
